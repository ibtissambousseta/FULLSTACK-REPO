Discussion :

Différence entre une instance directe d’EventEmitter et une classe qui l’étend :
Lorsqu’on crée directement une instance d’EventEmitter, on l’utilise telle quelle pour émettre et écouter des événements dans un même fichier.
En revanche, lorsqu’on crée une classe qui étend EventEmitter, on peut y ajouter des méthodes personnalisées (comme log()), ce qui permet de regrouper la logique et de créer un composant plus structuré et réutilisable.
Autrement dit, l’héritage permet de combiner le comportement d’EventEmitter avec des fonctionnalités spécifiques à notre application.

Pourquoi encapsuler la logique dans une classe :
Encapsuler la logique dans une classe rend le code plus organisé, plus clair et réutilisable.
Cela permet de séparer les responsabilités : la classe gère ses propres événements et peut être importée dans d’autres fichiers sans dupliquer le code.
En résumé, cela facilite la maintenance et améliore la modularité du programme.